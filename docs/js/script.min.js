"use strict";const burger=document.querySelector(".burger"),header=document.querySelector(".header"),headerAction=document.querySelector(".header__action"),body=document.querySelector("body");window.addEventListener("load",()=>{function d(e){e=document.querySelector(e);if(e)return e}function o(e){e=document.querySelectorAll(e);if(e)return e}{function e(e){e.target.closest(".burger")?burger.classList.contains("active")?t():(burger.classList.add("active"),header.classList.add("active"),headerAction.classList.add("active"),body.classList.add("lock"),i(),window.addEventListener("scroll",t)):e.target.closest(".burger")||e.target.closest(".header__action-wrapper")||(burger.classList.remove("active"),header.classList.remove("active"),headerAction.classList.remove("active"),body.classList.remove("lock"),t())}function t(){burger.classList.contains("active")&&(burger.classList.remove("active"),header.classList.remove("active"),headerAction.classList.remove("active"),body.classList.remove("lock"),setTimeout(()=>{d(".header__action-wrapper").style.height=null},1e3),window.removeEventListener("scroll",t))}function i(e){const t=d(".header__action-wrapper");var i=d(".header__action-body"),s=t.scrollHeight,i=i.scrollHeight,o=s+i;headerAction.classList.contains("active")&&(o>=window.innerHeight?t.style.height="100%":t.style.height=s+i+"px")}burger&&body.addEventListener("click",e)}if(d(".header")&&(d(".btn.authorization").addEventListener("click",()=>{document.location.href="authorization.html"}),d(".premium-acess").addEventListener("click",()=>{document.location.href="payment.html"})),d(".spoiler")){if(d(".spoiler").classList.contains("opened")){let e=o(".spoiler__wrapper")[0];e.style.height=e.scrollHeight+"px"}body.addEventListener("click",function(t){if(t.target.closest(".spoiler__preview")){t.target.closest(".spoiler").classList.toggle("opened");let e=t.target.closest(".spoiler__preview").nextElementSibling;t.target.closest(".spoiler").classList.contains("opened")?e.style.height=e.scrollHeight+"px":e.style.height=null}})}function s(e){window.innerWidth<=768?d(".hello-h2__title").after(d(".biography__graphic")):768<window.innerWidth&&d(".biography__container").prepend(d(".biography__graphic"))}function r(e){const t=d(".comments__items > :nth-child(1) .forum-comment__top"),i=d(".comments__items > :nth-child(2) .forum-comment__top"),s=d(".comments__items > :nth-child(3) .forum-comment__top"),o=d(".comments__items > :nth-child(1) .forum-comment__text-line-left"),r=d(".comments__items > :nth-child(2) .forum-comment__text-line-left"),n=d(".comments__items > :nth-child(3) .forum-comment__text-line-left");var c=d(".comments__items > :nth-child(1) .forum-comment__title"),a=d(".comments__items > :nth-child(2) .forum-comment__title"),l=d(".comments__items > :nth-child(3) .forum-comment__title");(window.innerWidth<=768?(t.append(c),i.append(a),s):(o.append(c),r.append(a),n)).append(l)}d("body.home")&&(window.addEventListener("resize",s),s(),new Swiper(".biography__swiper",{spaceBetween:22,slidesPerView:2.47,slideToClickedSlide:!0,breakpoints:{460:{slidesPerView:2.75,spaceBetween:28},769:{slidesPerView:2},1e3:{slidesPerView:2.5,spaceBetween:35},1200:{slidesPerView:3,spaceBetween:9}}}),new Swiper(".slider__swiper",{spaceBetween:16,slidesPerView:1.27025,slideToClickedSlide:!0,loop:!0,initialSlide:0,breakpoints:{460:{slidesPerView:1.6},560:{slidesPerView:1.9},660:{slidesPerView:2.3},769:{slidesPerView:2.7,spaceBetween:23},900:{slidesPerView:3.2},1e3:{slidesPerView:3.4},1200:{slidesPerView:3.8683,spaceBetween:30,centeredSlides:!0,initialSlide:1}}})),d("body.nfts")&&body.addEventListener("click",function(e){e.target.closest(".nft-card-item .btn")&&(document.location.href="product-1.html")}),d(".confirm")&&d(".confirm").addEventListener("click",e=>{e.preventDefault(),d(".confirm svg").classList.toggle("active")}),(d("body.product-1")||d("body.product-1-unlocked"))&&body.addEventListener("click",function(e){e.target.closest(".process__video svg")||e.target.closest(".process__poster")?(d("video").style.zIndex="5",d("video").setAttribute("controls","true"),d("video").play(),d(".process__poster").style.opacity="0"):(e.target.closest(".process .btn")||e.target.closest("body.product-1 .hero__line .btn"))&&(document.location.href="product-1-unlocked.html")}),d("body.forum")&&(new Swiper(".swiper",{spaceBetween:14,slidesPerView:1.23,slideToClickedSlide:!0,loop:!0,breakpoints:{460:{slidesPerView:1.4},560:{slidesPerView:1.7},660:{slidesPerView:1.9},769:{slidesPerView:2.2,spaceBetween:20},900:{slidesPerView:2.6},1e3:{slidesPerView:2.8},1150:{slidesPerView:3,spaceBetween:30}}}),window.addEventListener("resize",r),r());{function n(e){"Log in"==e.target.getAttribute("data-location")?(body.className="authorization log-in",o(".hero__button")[0].classList.add("active"),o(".hero__button")[1].classList.remove("active"),o(".hero__link")[0].classList.add("active"),o(".hero__link")[1].classList.remove("active")):"Sign up"==e.target.getAttribute("data-location")?(body.className="authorization sign-up",o(".hero__button")[1].classList.add("active"),o(".hero__button")[0].classList.remove("active"),o(".hero__link")[1].classList.add("active"),o(".hero__link")[0].classList.remove("active")):e.target.closest(".hero__radio")?(o(".hero__radio").forEach(e=>{e.classList.remove("active")}),e.target.closest(".hero__radio").classList.add("active")):e.target.closest(".hero__btn")&&(document.location.href=d(".hero__radio.active").getAttribute("data-url"))}d("body.authorization")&&body.addEventListener("click",n)}if(d("body.admin")){const m=d(".admin-burger"),_=d(".admin-header"),u=document.querySelector(".aside__action");{function e(e){e.target.closest(".admin-burger")?m.classList.contains("active")?t():(m.classList.add("active"),_.classList.add("active"),u.classList.add("active"),body.classList.add("lock"),i(),window.addEventListener("scroll",t)):e.target.closest(".admin-burger")||e.target.closest(".aside__action-wrapper")||(m.classList.remove("active"),_.classList.remove("active"),u.classList.remove("active"),body.classList.remove("lock"),t())}function t(){m.classList.contains("active")&&(m.classList.remove("active"),_.classList.remove("active"),u.classList.remove("active"),body.classList.remove("lock"),setTimeout(()=>{d(".aside__action-wrapper").style.height=null},1e3),window.removeEventListener("scroll",t))}function i(e){const t=d(".aside__action-wrapper");var i=d(".aside__action-body"),s=t.scrollHeight,i=i.scrollHeight,o=s+i;u.classList.contains("active")&&(o>=window.innerHeight?t.style.height="100%":t.style.height=s+i+"px")}m&&body.addEventListener("click",e)}function n(t){t.target.closest(".menu__item")?(o(".menu__item").forEach(e=>{e.classList.remove("active")}),t.target.closest(".menu__item").classList.add("active"),"orders"==t.target.closest(".menu__item").getAttribute("data-location")?setTimeout(()=>{c()},50):"nft"==t.target.closest(".menu__item").getAttribute("data-location")?setTimeout(()=>{a()},50):"workers"==t.target.closest(".menu__item").getAttribute("data-location")&&setTimeout(()=>{l()},50),o("section").forEach(e=>{e.classList.remove("active"),e.classList.contains(t.target.closest(".aside__menu li").getAttribute("data-location"))&&e.classList.add("active")})):t.target.closest(".chat-list-items__item")?(d(".messages__chat").classList.add("visible"),window.scrollTo(0,64)):t.target.closest(".chat__title svg")&&d(".messages__chat").classList.remove("visible")}function c(e){if(768<window.innerWidth){const s=d(".orders__item").children,o=d(".orders__heading"),r=o.children,n=[];o.style.gridTemplateColumns="repeat(8, 1px)";for(let e=0;e<r.length;e++){var t=s[e].getBoundingClientRect().width,i=r[e].getBoundingClientRect().width;i<=t?n.push(t):n.push(i)}o.style.display="grid",o.style.gridTemplateColumns=`${n[0]}px ${n[1]}px ${n[2]}px ${n[3]}px ${n[4]}px ${n[5]}px ${n[6]}px ${n[7]}px `}}function a(e){if(768<window.innerWidth){const s=d(".nft-orders__item").children,o=d(".nft-orders__heading"),r=o.children,n=[];o.style.gridTemplateColumns="repeat(5, 1px)";for(let e=0;e<r.length;e++){var t=s[e].getBoundingClientRect().width,i=r[e].getBoundingClientRect().width;i<=t?n.push(t):n.push(i)}o.style.display="grid",o.style.gridTemplateColumns=`${n[0]}px ${n[1]}px ${n[2]}px ${n[3]}px ${n[4]}px`}}function l(e){if(768<window.innerWidth){const s=d(".workers__item").children,o=d(".workers__heading"),r=o.children,n=[];o.style.gridTemplateColumns="repeat(4, 1px)";for(let e=0;e<r.length;e++){var t=s[e].getBoundingClientRect().width,i=r[e].getBoundingClientRect().width;i<=t?n.push(t):n.push(i)}o.style.display="grid",o.style.gridTemplateColumns=`${n[0]}px ${n[1]}px ${n[2]}px ${n[3]}px`}}body.addEventListener("click",n),window.addEventListener("resize",c),c(),window.addEventListener("resize",a),a(),window.addEventListener("resize",l),l();new Swiper(".swiper",{spaceBetween:28,slidesPerView:3.5,slideToClickedSlide:!0,breakpoints:{375:{slidesPerView:4.4},460:{slidesPerView:5},560:{slidesPerView:6},660:{slidesPerView:7}}})}if(d("body.payment")||d("body.components")||d("body.pricing")){const p=document.querySelectorAll(".tabs__nav-btn"),h=document.querySelectorAll(".tabs__item"),v=document.querySelectorAll(".tabs__confirm");o(".tabs__nav-btn").forEach(i=>{i.addEventListener("click",()=>{var e=i.getAttribute("data-tab");let t=document.querySelector(e);i.classList.contains("active")||(p.forEach(e=>{e.classList.remove("active")}),h.forEach(e=>{e.classList.remove("active")}),i.classList.add("active"),t.classList.add("active"))})});let t=document.querySelector(".popup"),i=document.querySelector(".payment__content"),s=document.querySelector(".popup__confirm");v.forEach(e=>{e.addEventListener("click",()=>{t.classList.remove("none"),i.classList.add("none")}),s.addEventListener("click",()=>{t.classList.add("none"),i.classList.remove("none")})})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
